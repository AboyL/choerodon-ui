// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`Tree-pro should input value is equal to one 1`] = `
<TreeTest>
  <NumberField
    autoComplete="off"
    clearButton={false}
    multiple={false}
    noValidate={false}
    readOnly={false}
    showHelp="newLine"
    suffixCls="input-number"
    trim="both"
    value={1}
  >
    <Tooltip
      arrowPointAtCenter={false}
      autoAdjustOverflow={true}
      defaultHidden={true}
      mouseEnterDelay={100}
      mouseLeaveDelay={100}
      placement="bottomLeft"
      suffixCls="tooltip"
      theme="light"
      title={null}
      transitionName="zoom-big-fast"
      trigger={
        Array [
          "hover",
        ]
      }
    >
      <Trigger
        action={
          Array [
            "hover",
          ]
        }
        arrowPointAtCenter={false}
        autoAdjustOverflow={true}
        blurDelay={0}
        builtinPlacements={
          Object {
            "bottom": Object {
              "offset": Array [
                0,
                10,
              ],
              "overflow": Object {
                "adjustX": 1,
                "adjustY": 1,
              },
              "points": Array [
                "tc",
                "bc",
              ],
              "targetOffset": Array [
                0,
                0,
              ],
            },
            "bottomLeft": Object {
              "offset": Array [
                0,
                10,
              ],
              "overflow": Object {
                "adjustX": 1,
                "adjustY": 1,
              },
              "points": Array [
                "tl",
                "bl",
              ],
              "targetOffset": Array [
                0,
                0,
              ],
            },
            "bottomRight": Object {
              "offset": Array [
                0,
                10,
              ],
              "overflow": Object {
                "adjustX": 1,
                "adjustY": 1,
              },
              "points": Array [
                "tr",
                "br",
              ],
              "targetOffset": Array [
                0,
                0,
              ],
            },
            "left": Object {
              "offset": Array [
                -10,
                0,
              ],
              "overflow": Object {
                "adjustX": 1,
                "adjustY": 1,
              },
              "points": Array [
                "cr",
                "cl",
              ],
              "targetOffset": Array [
                0,
                0,
              ],
            },
            "leftBottom": Object {
              "offset": Array [
                -10,
                0,
              ],
              "overflow": Object {
                "adjustX": 1,
                "adjustY": 1,
              },
              "points": Array [
                "br",
                "bl",
              ],
              "targetOffset": Array [
                0,
                0,
              ],
            },
            "leftTop": Object {
              "offset": Array [
                -10,
                0,
              ],
              "overflow": Object {
                "adjustX": 1,
                "adjustY": 1,
              },
              "points": Array [
                "tr",
                "tl",
              ],
              "targetOffset": Array [
                0,
                0,
              ],
            },
            "right": Object {
              "offset": Array [
                10,
                0,
              ],
              "overflow": Object {
                "adjustX": 1,
                "adjustY": 1,
              },
              "points": Array [
                "cl",
                "cr",
              ],
              "targetOffset": Array [
                0,
                0,
              ],
            },
            "rightBottom": Object {
              "offset": Array [
                10,
                0,
              ],
              "overflow": Object {
                "adjustX": 1,
                "adjustY": 1,
              },
              "points": Array [
                "bl",
                "br",
              ],
              "targetOffset": Array [
                0,
                0,
              ],
            },
            "rightTop": Object {
              "offset": Array [
                10,
                0,
              ],
              "overflow": Object {
                "adjustX": 1,
                "adjustY": 1,
              },
              "points": Array [
                "tl",
                "tr",
              ],
              "targetOffset": Array [
                0,
                0,
              ],
            },
            "top": Object {
              "offset": Array [
                0,
                -10,
              ],
              "overflow": Object {
                "adjustX": 1,
                "adjustY": 1,
              },
              "points": Array [
                "bc",
                "tc",
              ],
              "targetOffset": Array [
                0,
                0,
              ],
            },
            "topLeft": Object {
              "offset": Array [
                0,
                -10,
              ],
              "overflow": Object {
                "adjustX": 1,
                "adjustY": 1,
              },
              "points": Array [
                "bl",
                "tl",
              ],
              "targetOffset": Array [
                0,
                0,
              ],
            },
            "topRight": Object {
              "offset": Array [
                0,
                -10,
              ],
              "overflow": Object {
                "adjustX": 1,
                "adjustY": 1,
              },
              "points": Array [
                "br",
                "tr",
              ],
              "targetOffset": Array [
                0,
                0,
              ],
            },
          }
        }
        defaultPopupHidden={true}
        focusDelay={150}
        mouseEnterDelay={100}
        mouseLeaveDelay={100}
        popupContent={null}
        popupPlacement="bottomLeft"
        prefixCls="c7n-pro-tooltip"
        suffixCls="tooltip"
        theme="light"
        title={null}
        transitionName="zoom-big-fast"
      >
        <TriggerChild
          key=".$.$element"
          onMouseEnter={[Function]}
          onMouseLeave={[Function]}
        >
          <span
            className="c7n-pro-input-number-wrapper"
            key=".$element"
            onBlur={[Function]}
            onClick={[Function]}
            onContextMenu={[Function]}
            onFocus={[Function]}
            onMouseDown={[Function]}
            onMouseEnter={[Function]}
            onMouseLeave={[Function]}
          >
            <label
              onMouseDown={[Function]}
            >
              <input
                autoComplete="off"
                className="c7n-pro-input-number"
                key="text"
                multiple={false}
                noValidate={false}
                onBlur={[Function]}
                onChange={[Function]}
                onFocus={[Function]}
                onKeyDown={[Function]}
                readOnly={true}
                type="text"
                value="1"
              />
            </label>
          </span>
        </TriggerChild>
        <Popup
          align={
            Object {
              "offset": Array [
                0,
                10,
              ],
              "overflow": Object {
                "adjustX": 1,
                "adjustY": 1,
              },
              "points": Array [
                "tl",
                "bl",
              ],
              "targetOffset": Array [
                0,
                0,
              ],
            }
          }
          className="c7n-pro-tooltip-popup"
          getClassNameFromAlign={[Function]}
          getRootDomNode={[Function]}
          hidden={true}
          key="popup"
          onMouseDown={[Function]}
          onMouseEnter={[Function]}
          onMouseLeave={[Function]}
          suffixCls="popup"
          transitionName="zoom-big-fast"
        />
      </Trigger>
    </Tooltip>
  </NumberField>
  <Tree<PRO>
    checkable={true}
    dataSet={
      DataSet {
        "cachedSelected": Array [],
        "children": Object {},
        "currentPage": 1,
        "dataToJSON": "dirty",
        "el": undefined,
        "events": Object {
          "indexchange": Array [
            Array [
              [Function],
              false,
            ],
          ],
          "select": Array [
            Array [
              [Function],
              false,
            ],
          ],
          "unselect": Array [
            Array [
              [Function],
              false,
            ],
          ],
        },
        "fields": Object {
          "expand": Field {
            "dataSet": [Circular],
            "isDynamicPropsComputing": false,
            "lastDynamicProps": Object {},
            "pending": PromiseQueue {
              "queue": Array [],
              "queueing": false,
            },
            "pristineProps": Object {
              "name": "expand",
              "type": "boolean",
            },
            "props": Object {
              "name": "expand",
              "type": "boolean",
            },
            "record": undefined,
            "validator": Validator {
              "control": undefined,
              "field": [Circular],
              "innerValidationResults": Array [],
            },
          },
          "id": Field {
            "dataSet": [Circular],
            "isDynamicPropsComputing": false,
            "lastDynamicProps": Object {},
            "pending": PromiseQueue {
              "queue": Array [],
              "queueing": false,
            },
            "pristineProps": Object {
              "name": "id",
              "type": "number",
            },
            "props": Object {
              "name": "id",
              "type": "number",
            },
            "record": undefined,
            "validator": Validator {
              "control": undefined,
              "field": [Circular],
              "innerValidationResults": Array [],
            },
          },
          "parentId": Field {
            "dataSet": [Circular],
            "isDynamicPropsComputing": false,
            "lastDynamicProps": Object {},
            "pending": PromiseQueue {
              "queue": Array [],
              "queueing": false,
            },
            "pristineProps": Object {
              "name": "parentId",
              "type": "number",
            },
            "props": Object {
              "name": "parentId",
              "type": "number",
            },
            "record": undefined,
            "validator": Validator {
              "control": undefined,
              "field": [Circular],
              "innerValidationResults": Array [],
            },
          },
        },
        "inBatchSelection": false,
        "name": undefined,
        "originalData": Array [
          Record {
            "cascadeRecordsMap": Object {},
            "data": Object {
              "expand": false,
              "functionCode": "HR",
              "icon": "fa fa-cubes",
              "id": 2,
              "ischecked": null,
              "parentId": undefined,
              "score": 10,
              "shortcutId": null,
              "symbol": "0",
              "text": "组织架构",
              "url": null,
            },
            "dataSet": [Circular],
            "dataSetSnapshot": Object {},
            "editing": undefined,
            "fields": Object {
              "expand": Field {
                "dataSet": [Circular],
                "isDynamicPropsComputing": false,
                "lastDynamicProps": Object {},
                "pending": PromiseQueue {
                  "queue": Array [],
                  "queueing": false,
                },
                "pristineProps": Object {
                  "name": "expand",
                },
                "props": Object {
                  "name": "expand",
                },
                "record": [Circular],
                "validator": Validator {
                  "control": undefined,
                  "field": [Circular],
                  "innerValidationResults": Array [],
                },
              },
              "id": Field {
                "dataSet": [Circular],
                "isDynamicPropsComputing": false,
                "lastDynamicProps": Object {},
                "pending": PromiseQueue {
                  "queue": Array [],
                  "queueing": false,
                },
                "pristineProps": Object {
                  "name": "id",
                },
                "props": Object {
                  "name": "id",
                },
                "record": [Circular],
                "validator": Validator {
                  "control": undefined,
                  "field": [Circular],
                  "innerValidationResults": Array [],
                },
              },
              "parentId": Field {
                "dataSet": [Circular],
                "isDynamicPropsComputing": false,
                "lastDynamicProps": Object {},
                "pending": PromiseQueue {
                  "queue": Array [],
                  "queueing": false,
                },
                "pristineProps": Object {
                  "name": "parentId",
                },
                "props": Object {
                  "name": "parentId",
                },
                "record": [Circular],
                "validator": Validator {
                  "control": undefined,
                  "field": [Circular],
                  "innerValidationResults": Array [],
                },
              },
            },
            "id": 1005,
            "isCached": false,
            "isCurrent": true,
            "isSelected": true,
            "pristineData": Object {
              "expand": false,
              "functionCode": "HR",
              "icon": "fa fa-cubes",
              "id": 2,
              "ischecked": null,
              "parentId": undefined,
              "score": 10,
              "shortcutId": null,
              "symbol": "0",
              "text": "组织架构",
              "url": null,
            },
            "selectable": true,
            "state": Object {},
            "status": "sync",
          },
          Record {
            "cascadeRecordsMap": Object {},
            "data": Object {
              "expand": false,
              "functionCode": "EMPLOYEE_REACT",
              "icon": "record_test",
              "id": 7,
              "ischecked": true,
              "parentId": 2,
              "score": 10,
              "shortcutId": null,
              "symbol": "1",
              "text": "员工管理(react)",
              "url": "hap-core/hr/employee",
            },
            "dataSet": [Circular],
            "dataSetSnapshot": Object {},
            "editing": undefined,
            "fields": Object {
              "expand": Field {
                "dataSet": [Circular],
                "isDynamicPropsComputing": false,
                "lastDynamicProps": Object {},
                "pending": PromiseQueue {
                  "queue": Array [],
                  "queueing": false,
                },
                "pristineProps": Object {
                  "name": "expand",
                },
                "props": Object {
                  "name": "expand",
                },
                "record": [Circular],
                "validator": Validator {
                  "control": undefined,
                  "field": [Circular],
                  "innerValidationResults": Array [],
                },
              },
              "id": Field {
                "dataSet": [Circular],
                "isDynamicPropsComputing": false,
                "lastDynamicProps": Object {},
                "pending": PromiseQueue {
                  "queue": Array [],
                  "queueing": false,
                },
                "pristineProps": Object {
                  "name": "id",
                },
                "props": Object {
                  "name": "id",
                },
                "record": [Circular],
                "validator": Validator {
                  "control": undefined,
                  "field": [Circular],
                  "innerValidationResults": Array [],
                },
              },
              "parentId": Field {
                "dataSet": [Circular],
                "isDynamicPropsComputing": false,
                "lastDynamicProps": Object {},
                "pending": PromiseQueue {
                  "queue": Array [],
                  "queueing": false,
                },
                "pristineProps": Object {
                  "name": "parentId",
                },
                "props": Object {
                  "name": "parentId",
                },
                "record": [Circular],
                "validator": Validator {
                  "control": undefined,
                  "field": [Circular],
                  "innerValidationResults": Array [],
                },
              },
            },
            "id": 1006,
            "isCached": false,
            "isCurrent": false,
            "isSelected": false,
            "pristineData": Object {
              "expand": false,
              "functionCode": "EMPLOYEE_REACT",
              "icon": "record_test",
              "id": 7,
              "ischecked": true,
              "parentId": 2,
              "score": 10,
              "shortcutId": null,
              "symbol": "1",
              "text": "员工管理(react)",
              "url": "hap-core/hr/employee",
            },
            "selectable": true,
            "state": Object {},
            "status": "sync",
          },
          Record {
            "cascadeRecordsMap": Object {},
            "data": Object {
              "expand": false,
              "functionCode": "HR_UNIT",
              "icon": "fa fa-cube",
              "id": 73,
              "ischecked": true,
              "parentId": 2,
              "score": 10,
              "shortcutId": null,
              "symbol": "0",
              "text": "组织管理",
              "url": "hr/org_unit.html",
            },
            "dataSet": [Circular],
            "dataSetSnapshot": Object {},
            "editing": undefined,
            "fields": Object {
              "expand": Field {
                "dataSet": [Circular],
                "isDynamicPropsComputing": false,
                "lastDynamicProps": Object {},
                "pending": PromiseQueue {
                  "queue": Array [],
                  "queueing": false,
                },
                "pristineProps": Object {
                  "name": "expand",
                },
                "props": Object {
                  "name": "expand",
                },
                "record": [Circular],
                "validator": Validator {
                  "control": undefined,
                  "field": [Circular],
                  "innerValidationResults": Array [],
                },
              },
              "id": Field {
                "dataSet": [Circular],
                "isDynamicPropsComputing": false,
                "lastDynamicProps": Object {},
                "pending": PromiseQueue {
                  "queue": Array [],
                  "queueing": false,
                },
                "pristineProps": Object {
                  "name": "id",
                },
                "props": Object {
                  "name": "id",
                },
                "record": [Circular],
                "validator": Validator {
                  "control": undefined,
                  "field": [Circular],
                  "innerValidationResults": Array [],
                },
              },
              "parentId": Field {
                "dataSet": [Circular],
                "isDynamicPropsComputing": false,
                "lastDynamicProps": Object {},
                "pending": PromiseQueue {
                  "queue": Array [],
                  "queueing": false,
                },
                "pristineProps": Object {
                  "name": "parentId",
                },
                "props": Object {
                  "name": "parentId",
                },
                "record": [Circular],
                "validator": Validator {
                  "control": undefined,
                  "field": [Circular],
                  "innerValidationResults": Array [],
                },
              },
            },
            "id": 1007,
            "isCached": false,
            "isCurrent": false,
            "isSelected": false,
            "pristineData": Object {
              "expand": false,
              "functionCode": "HR_UNIT",
              "icon": "fa fa-cube",
              "id": 73,
              "ischecked": true,
              "parentId": 2,
              "score": 10,
              "shortcutId": null,
              "symbol": "0",
              "text": "组织管理",
              "url": "hr/org_unit.html",
            },
            "selectable": true,
            "state": Object {},
            "status": "sync",
          },
          Record {
            "cascadeRecordsMap": Object {},
            "data": Object {
              "expand": false,
              "functionCode": "COMPANY_REACT",
              "icon": "mail_set",
              "id": 12,
              "ischecked": true,
              "parentId": 2,
              "score": 10,
              "shortcutId": null,
              "symbol": "1",
              "text": "公司管理(react)",
              "url": "hap-core/hr/company",
            },
            "dataSet": [Circular],
            "dataSetSnapshot": Object {},
            "editing": undefined,
            "fields": Object {
              "expand": Field {
                "dataSet": [Circular],
                "isDynamicPropsComputing": false,
                "lastDynamicProps": Object {},
                "pending": PromiseQueue {
                  "queue": Array [],
                  "queueing": false,
                },
                "pristineProps": Object {
                  "name": "expand",
                },
                "props": Object {
                  "name": "expand",
                },
                "record": [Circular],
                "validator": Validator {
                  "control": undefined,
                  "field": [Circular],
                  "innerValidationResults": Array [],
                },
              },
              "id": Field {
                "dataSet": [Circular],
                "isDynamicPropsComputing": false,
                "lastDynamicProps": Object {},
                "pending": PromiseQueue {
                  "queue": Array [],
                  "queueing": false,
                },
                "pristineProps": Object {
                  "name": "id",
                },
                "props": Object {
                  "name": "id",
                },
                "record": [Circular],
                "validator": Validator {
                  "control": undefined,
                  "field": [Circular],
                  "innerValidationResults": Array [],
                },
              },
              "parentId": Field {
                "dataSet": [Circular],
                "isDynamicPropsComputing": false,
                "lastDynamicProps": Object {},
                "pending": PromiseQueue {
                  "queue": Array [],
                  "queueing": false,
                },
                "pristineProps": Object {
                  "name": "parentId",
                },
                "props": Object {
                  "name": "parentId",
                },
                "record": [Circular],
                "validator": Validator {
                  "control": undefined,
                  "field": [Circular],
                  "innerValidationResults": Array [],
                },
              },
            },
            "id": 1008,
            "isCached": false,
            "isCurrent": false,
            "isSelected": false,
            "pristineData": Object {
              "expand": false,
              "functionCode": "COMPANY_REACT",
              "icon": "mail_set",
              "id": 12,
              "ischecked": true,
              "parentId": 2,
              "score": 10,
              "shortcutId": null,
              "symbol": "1",
              "text": "公司管理(react)",
              "url": "hap-core/hr/company",
            },
            "selectable": true,
            "state": Object {},
            "status": "sync",
          },
        ],
        "pageSize": 10,
        "parent": undefined,
        "parentName": undefined,
        "pending": PromiseQueue {
          "queue": Array [],
          "queueing": false,
        },
        "props": Object {
          "autoCreate": false,
          "autoLocateAfterCreate": true,
          "autoLocateAfterRemove": true,
          "autoLocateFirst": true,
          "autoQuery": false,
          "autoQueryAfterSubmit": true,
          "data": Array [
            Object {
              "expand": false,
              "functionCode": "HR",
              "icon": "fa fa-cubes",
              "id": 2,
              "ischecked": null,
              "score": 10,
              "shortcutId": null,
              "symbol": "0",
              "text": "组织架构",
              "url": null,
            },
            Object {
              "expand": false,
              "functionCode": "EMPLOYEE_REACT",
              "icon": "record_test",
              "id": 7,
              "ischecked": true,
              "parentId": 2,
              "score": 10,
              "shortcutId": null,
              "symbol": "1",
              "text": "员工管理(react)",
              "url": "hap-core/hr/employee",
            },
            Object {
              "expand": false,
              "functionCode": "HR_UNIT",
              "icon": "fa fa-cube",
              "id": 73,
              "ischecked": true,
              "parentId": 2,
              "score": 10,
              "shortcutId": null,
              "symbol": "0",
              "text": "组织管理",
              "url": "hr/org_unit.html",
            },
            Object {
              "expand": false,
              "functionCode": "COMPANY_REACT",
              "icon": "mail_set",
              "id": 12,
              "ischecked": true,
              "parentId": 2,
              "score": 10,
              "shortcutId": null,
              "symbol": "1",
              "text": "公司管理(react)",
              "url": "hap-core/hr/company",
            },
          ],
          "dataToJSON": "dirty",
          "events": Object {
            "select": [Function],
            "unSelect": [Function],
          },
          "expandField": "expand",
          "fields": Array [
            Object {
              "name": "id",
              "type": "number",
            },
            Object {
              "name": "expand",
              "type": "boolean",
            },
            Object {
              "name": "parentId",
              "type": "number",
            },
          ],
          "idField": "id",
          "modifiedCheck": true,
          "pageSize": 10,
          "paging": true,
          "parentField": "parentId",
          "primaryKey": "id",
          "selection": "multiple",
        },
        "queryParameter": Object {},
        "records": Array [
          Record {
            "cascadeRecordsMap": Object {},
            "data": Object {
              "expand": false,
              "functionCode": "HR",
              "icon": "fa fa-cubes",
              "id": 2,
              "ischecked": null,
              "parentId": undefined,
              "score": 10,
              "shortcutId": null,
              "symbol": "0",
              "text": "组织架构",
              "url": null,
            },
            "dataSet": [Circular],
            "dataSetSnapshot": Object {},
            "editing": undefined,
            "fields": Object {
              "expand": Field {
                "dataSet": [Circular],
                "isDynamicPropsComputing": false,
                "lastDynamicProps": Object {},
                "pending": PromiseQueue {
                  "queue": Array [],
                  "queueing": false,
                },
                "pristineProps": Object {
                  "name": "expand",
                },
                "props": Object {
                  "name": "expand",
                },
                "record": [Circular],
                "validator": Validator {
                  "control": undefined,
                  "field": [Circular],
                  "innerValidationResults": Array [],
                },
              },
              "id": Field {
                "dataSet": [Circular],
                "isDynamicPropsComputing": false,
                "lastDynamicProps": Object {},
                "pending": PromiseQueue {
                  "queue": Array [],
                  "queueing": false,
                },
                "pristineProps": Object {
                  "name": "id",
                },
                "props": Object {
                  "name": "id",
                },
                "record": [Circular],
                "validator": Validator {
                  "control": undefined,
                  "field": [Circular],
                  "innerValidationResults": Array [],
                },
              },
              "parentId": Field {
                "dataSet": [Circular],
                "isDynamicPropsComputing": false,
                "lastDynamicProps": Object {},
                "pending": PromiseQueue {
                  "queue": Array [],
                  "queueing": false,
                },
                "pristineProps": Object {
                  "name": "parentId",
                },
                "props": Object {
                  "name": "parentId",
                },
                "record": [Circular],
                "validator": Validator {
                  "control": undefined,
                  "field": [Circular],
                  "innerValidationResults": Array [],
                },
              },
            },
            "id": 1005,
            "isCached": false,
            "isCurrent": true,
            "isSelected": true,
            "pristineData": Object {
              "expand": false,
              "functionCode": "HR",
              "icon": "fa fa-cubes",
              "id": 2,
              "ischecked": null,
              "parentId": undefined,
              "score": 10,
              "shortcutId": null,
              "symbol": "0",
              "text": "组织架构",
              "url": null,
            },
            "selectable": true,
            "state": Object {},
            "status": "sync",
          },
          Record {
            "cascadeRecordsMap": Object {},
            "data": Object {
              "expand": false,
              "functionCode": "EMPLOYEE_REACT",
              "icon": "record_test",
              "id": 7,
              "ischecked": true,
              "parentId": 2,
              "score": 10,
              "shortcutId": null,
              "symbol": "1",
              "text": "员工管理(react)",
              "url": "hap-core/hr/employee",
            },
            "dataSet": [Circular],
            "dataSetSnapshot": Object {},
            "editing": undefined,
            "fields": Object {
              "expand": Field {
                "dataSet": [Circular],
                "isDynamicPropsComputing": false,
                "lastDynamicProps": Object {},
                "pending": PromiseQueue {
                  "queue": Array [],
                  "queueing": false,
                },
                "pristineProps": Object {
                  "name": "expand",
                },
                "props": Object {
                  "name": "expand",
                },
                "record": [Circular],
                "validator": Validator {
                  "control": undefined,
                  "field": [Circular],
                  "innerValidationResults": Array [],
                },
              },
              "id": Field {
                "dataSet": [Circular],
                "isDynamicPropsComputing": false,
                "lastDynamicProps": Object {},
                "pending": PromiseQueue {
                  "queue": Array [],
                  "queueing": false,
                },
                "pristineProps": Object {
                  "name": "id",
                },
                "props": Object {
                  "name": "id",
                },
                "record": [Circular],
                "validator": Validator {
                  "control": undefined,
                  "field": [Circular],
                  "innerValidationResults": Array [],
                },
              },
              "parentId": Field {
                "dataSet": [Circular],
                "isDynamicPropsComputing": false,
                "lastDynamicProps": Object {},
                "pending": PromiseQueue {
                  "queue": Array [],
                  "queueing": false,
                },
                "pristineProps": Object {
                  "name": "parentId",
                },
                "props": Object {
                  "name": "parentId",
                },
                "record": [Circular],
                "validator": Validator {
                  "control": undefined,
                  "field": [Circular],
                  "innerValidationResults": Array [],
                },
              },
            },
            "id": 1006,
            "isCached": false,
            "isCurrent": false,
            "isSelected": false,
            "pristineData": Object {
              "expand": false,
              "functionCode": "EMPLOYEE_REACT",
              "icon": "record_test",
              "id": 7,
              "ischecked": true,
              "parentId": 2,
              "score": 10,
              "shortcutId": null,
              "symbol": "1",
              "text": "员工管理(react)",
              "url": "hap-core/hr/employee",
            },
            "selectable": true,
            "state": Object {},
            "status": "sync",
          },
          Record {
            "cascadeRecordsMap": Object {},
            "data": Object {
              "expand": false,
              "functionCode": "HR_UNIT",
              "icon": "fa fa-cube",
              "id": 73,
              "ischecked": true,
              "parentId": 2,
              "score": 10,
              "shortcutId": null,
              "symbol": "0",
              "text": "组织管理",
              "url": "hr/org_unit.html",
            },
            "dataSet": [Circular],
            "dataSetSnapshot": Object {},
            "editing": undefined,
            "fields": Object {
              "expand": Field {
                "dataSet": [Circular],
                "isDynamicPropsComputing": false,
                "lastDynamicProps": Object {},
                "pending": PromiseQueue {
                  "queue": Array [],
                  "queueing": false,
                },
                "pristineProps": Object {
                  "name": "expand",
                },
                "props": Object {
                  "name": "expand",
                },
                "record": [Circular],
                "validator": Validator {
                  "control": undefined,
                  "field": [Circular],
                  "innerValidationResults": Array [],
                },
              },
              "id": Field {
                "dataSet": [Circular],
                "isDynamicPropsComputing": false,
                "lastDynamicProps": Object {},
                "pending": PromiseQueue {
                  "queue": Array [],
                  "queueing": false,
                },
                "pristineProps": Object {
                  "name": "id",
                },
                "props": Object {
                  "name": "id",
                },
                "record": [Circular],
                "validator": Validator {
                  "control": undefined,
                  "field": [Circular],
                  "innerValidationResults": Array [],
                },
              },
              "parentId": Field {
                "dataSet": [Circular],
                "isDynamicPropsComputing": false,
                "lastDynamicProps": Object {},
                "pending": PromiseQueue {
                  "queue": Array [],
                  "queueing": false,
                },
                "pristineProps": Object {
                  "name": "parentId",
                },
                "props": Object {
                  "name": "parentId",
                },
                "record": [Circular],
                "validator": Validator {
                  "control": undefined,
                  "field": [Circular],
                  "innerValidationResults": Array [],
                },
              },
            },
            "id": 1007,
            "isCached": false,
            "isCurrent": false,
            "isSelected": false,
            "pristineData": Object {
              "expand": false,
              "functionCode": "HR_UNIT",
              "icon": "fa fa-cube",
              "id": 73,
              "ischecked": true,
              "parentId": 2,
              "score": 10,
              "shortcutId": null,
              "symbol": "0",
              "text": "组织管理",
              "url": "hr/org_unit.html",
            },
            "selectable": true,
            "state": Object {},
            "status": "sync",
          },
          Record {
            "cascadeRecordsMap": Object {},
            "data": Object {
              "expand": false,
              "functionCode": "COMPANY_REACT",
              "icon": "mail_set",
              "id": 12,
              "ischecked": true,
              "parentId": 2,
              "score": 10,
              "shortcutId": null,
              "symbol": "1",
              "text": "公司管理(react)",
              "url": "hap-core/hr/company",
            },
            "dataSet": [Circular],
            "dataSetSnapshot": Object {},
            "editing": undefined,
            "fields": Object {
              "expand": Field {
                "dataSet": [Circular],
                "isDynamicPropsComputing": false,
                "lastDynamicProps": Object {},
                "pending": PromiseQueue {
                  "queue": Array [],
                  "queueing": false,
                },
                "pristineProps": Object {
                  "name": "expand",
                },
                "props": Object {
                  "name": "expand",
                },
                "record": [Circular],
                "validator": Validator {
                  "control": undefined,
                  "field": [Circular],
                  "innerValidationResults": Array [],
                },
              },
              "id": Field {
                "dataSet": [Circular],
                "isDynamicPropsComputing": false,
                "lastDynamicProps": Object {},
                "pending": PromiseQueue {
                  "queue": Array [],
                  "queueing": false,
                },
                "pristineProps": Object {
                  "name": "id",
                },
                "props": Object {
                  "name": "id",
                },
                "record": [Circular],
                "validator": Validator {
                  "control": undefined,
                  "field": [Circular],
                  "innerValidationResults": Array [],
                },
              },
              "parentId": Field {
                "dataSet": [Circular],
                "isDynamicPropsComputing": false,
                "lastDynamicProps": Object {},
                "pending": PromiseQueue {
                  "queue": Array [],
                  "queueing": false,
                },
                "pristineProps": Object {
                  "name": "parentId",
                },
                "props": Object {
                  "name": "parentId",
                },
                "record": [Circular],
                "validator": Validator {
                  "control": undefined,
                  "field": [Circular],
                  "innerValidationResults": Array [],
                },
              },
            },
            "id": 1008,
            "isCached": false,
            "isCurrent": false,
            "isSelected": false,
            "pristineData": Object {
              "expand": false,
              "functionCode": "COMPANY_REACT",
              "icon": "mail_set",
              "id": 12,
              "ischecked": true,
              "parentId": 2,
              "score": 10,
              "shortcutId": null,
              "symbol": "1",
              "text": "公司管理(react)",
              "url": "hap-core/hr/company",
            },
            "selectable": true,
            "state": Object {},
            "status": "sync",
          },
        ],
        "resetInBatch": false,
        "selection": "multiple",
        "status": "ready",
        "syncChildrenRemote": [Function],
        "totalCount": 4,
      }
    }
    renderer={[Function]}
  >
    <Spin
      dataSet={
        DataSet {
          "cachedSelected": Array [],
          "children": Object {},
          "currentPage": 1,
          "dataToJSON": "dirty",
          "el": undefined,
          "events": Object {
            "indexchange": Array [
              Array [
                [Function],
                false,
              ],
            ],
            "select": Array [
              Array [
                [Function],
                false,
              ],
            ],
            "unselect": Array [
              Array [
                [Function],
                false,
              ],
            ],
          },
          "fields": Object {
            "expand": Field {
              "dataSet": [Circular],
              "isDynamicPropsComputing": false,
              "lastDynamicProps": Object {},
              "pending": PromiseQueue {
                "queue": Array [],
                "queueing": false,
              },
              "pristineProps": Object {
                "name": "expand",
                "type": "boolean",
              },
              "props": Object {
                "name": "expand",
                "type": "boolean",
              },
              "record": undefined,
              "validator": Validator {
                "control": undefined,
                "field": [Circular],
                "innerValidationResults": Array [],
              },
            },
            "id": Field {
              "dataSet": [Circular],
              "isDynamicPropsComputing": false,
              "lastDynamicProps": Object {},
              "pending": PromiseQueue {
                "queue": Array [],
                "queueing": false,
              },
              "pristineProps": Object {
                "name": "id",
                "type": "number",
              },
              "props": Object {
                "name": "id",
                "type": "number",
              },
              "record": undefined,
              "validator": Validator {
                "control": undefined,
                "field": [Circular],
                "innerValidationResults": Array [],
              },
            },
            "parentId": Field {
              "dataSet": [Circular],
              "isDynamicPropsComputing": false,
              "lastDynamicProps": Object {},
              "pending": PromiseQueue {
                "queue": Array [],
                "queueing": false,
              },
              "pristineProps": Object {
                "name": "parentId",
                "type": "number",
              },
              "props": Object {
                "name": "parentId",
                "type": "number",
              },
              "record": undefined,
              "validator": Validator {
                "control": undefined,
                "field": [Circular],
                "innerValidationResults": Array [],
              },
            },
          },
          "inBatchSelection": false,
          "name": undefined,
          "originalData": Array [
            Record {
              "cascadeRecordsMap": Object {},
              "data": Object {
                "expand": false,
                "functionCode": "HR",
                "icon": "fa fa-cubes",
                "id": 2,
                "ischecked": null,
                "parentId": undefined,
                "score": 10,
                "shortcutId": null,
                "symbol": "0",
                "text": "组织架构",
                "url": null,
              },
              "dataSet": [Circular],
              "dataSetSnapshot": Object {},
              "editing": undefined,
              "fields": Object {
                "expand": Field {
                  "dataSet": [Circular],
                  "isDynamicPropsComputing": false,
                  "lastDynamicProps": Object {},
                  "pending": PromiseQueue {
                    "queue": Array [],
                    "queueing": false,
                  },
                  "pristineProps": Object {
                    "name": "expand",
                  },
                  "props": Object {
                    "name": "expand",
                  },
                  "record": [Circular],
                  "validator": Validator {
                    "control": undefined,
                    "field": [Circular],
                    "innerValidationResults": Array [],
                  },
                },
                "id": Field {
                  "dataSet": [Circular],
                  "isDynamicPropsComputing": false,
                  "lastDynamicProps": Object {},
                  "pending": PromiseQueue {
                    "queue": Array [],
                    "queueing": false,
                  },
                  "pristineProps": Object {
                    "name": "id",
                  },
                  "props": Object {
                    "name": "id",
                  },
                  "record": [Circular],
                  "validator": Validator {
                    "control": undefined,
                    "field": [Circular],
                    "innerValidationResults": Array [],
                  },
                },
                "parentId": Field {
                  "dataSet": [Circular],
                  "isDynamicPropsComputing": false,
                  "lastDynamicProps": Object {},
                  "pending": PromiseQueue {
                    "queue": Array [],
                    "queueing": false,
                  },
                  "pristineProps": Object {
                    "name": "parentId",
                  },
                  "props": Object {
                    "name": "parentId",
                  },
                  "record": [Circular],
                  "validator": Validator {
                    "control": undefined,
                    "field": [Circular],
                    "innerValidationResults": Array [],
                  },
                },
              },
              "id": 1005,
              "isCached": false,
              "isCurrent": true,
              "isSelected": true,
              "pristineData": Object {
                "expand": false,
                "functionCode": "HR",
                "icon": "fa fa-cubes",
                "id": 2,
                "ischecked": null,
                "parentId": undefined,
                "score": 10,
                "shortcutId": null,
                "symbol": "0",
                "text": "组织架构",
                "url": null,
              },
              "selectable": true,
              "state": Object {},
              "status": "sync",
            },
            Record {
              "cascadeRecordsMap": Object {},
              "data": Object {
                "expand": false,
                "functionCode": "EMPLOYEE_REACT",
                "icon": "record_test",
                "id": 7,
                "ischecked": true,
                "parentId": 2,
                "score": 10,
                "shortcutId": null,
                "symbol": "1",
                "text": "员工管理(react)",
                "url": "hap-core/hr/employee",
              },
              "dataSet": [Circular],
              "dataSetSnapshot": Object {},
              "editing": undefined,
              "fields": Object {
                "expand": Field {
                  "dataSet": [Circular],
                  "isDynamicPropsComputing": false,
                  "lastDynamicProps": Object {},
                  "pending": PromiseQueue {
                    "queue": Array [],
                    "queueing": false,
                  },
                  "pristineProps": Object {
                    "name": "expand",
                  },
                  "props": Object {
                    "name": "expand",
                  },
                  "record": [Circular],
                  "validator": Validator {
                    "control": undefined,
                    "field": [Circular],
                    "innerValidationResults": Array [],
                  },
                },
                "id": Field {
                  "dataSet": [Circular],
                  "isDynamicPropsComputing": false,
                  "lastDynamicProps": Object {},
                  "pending": PromiseQueue {
                    "queue": Array [],
                    "queueing": false,
                  },
                  "pristineProps": Object {
                    "name": "id",
                  },
                  "props": Object {
                    "name": "id",
                  },
                  "record": [Circular],
                  "validator": Validator {
                    "control": undefined,
                    "field": [Circular],
                    "innerValidationResults": Array [],
                  },
                },
                "parentId": Field {
                  "dataSet": [Circular],
                  "isDynamicPropsComputing": false,
                  "lastDynamicProps": Object {},
                  "pending": PromiseQueue {
                    "queue": Array [],
                    "queueing": false,
                  },
                  "pristineProps": Object {
                    "name": "parentId",
                  },
                  "props": Object {
                    "name": "parentId",
                  },
                  "record": [Circular],
                  "validator": Validator {
                    "control": undefined,
                    "field": [Circular],
                    "innerValidationResults": Array [],
                  },
                },
              },
              "id": 1006,
              "isCached": false,
              "isCurrent": false,
              "isSelected": false,
              "pristineData": Object {
                "expand": false,
                "functionCode": "EMPLOYEE_REACT",
                "icon": "record_test",
                "id": 7,
                "ischecked": true,
                "parentId": 2,
                "score": 10,
                "shortcutId": null,
                "symbol": "1",
                "text": "员工管理(react)",
                "url": "hap-core/hr/employee",
              },
              "selectable": true,
              "state": Object {},
              "status": "sync",
            },
            Record {
              "cascadeRecordsMap": Object {},
              "data": Object {
                "expand": false,
                "functionCode": "HR_UNIT",
                "icon": "fa fa-cube",
                "id": 73,
                "ischecked": true,
                "parentId": 2,
                "score": 10,
                "shortcutId": null,
                "symbol": "0",
                "text": "组织管理",
                "url": "hr/org_unit.html",
              },
              "dataSet": [Circular],
              "dataSetSnapshot": Object {},
              "editing": undefined,
              "fields": Object {
                "expand": Field {
                  "dataSet": [Circular],
                  "isDynamicPropsComputing": false,
                  "lastDynamicProps": Object {},
                  "pending": PromiseQueue {
                    "queue": Array [],
                    "queueing": false,
                  },
                  "pristineProps": Object {
                    "name": "expand",
                  },
                  "props": Object {
                    "name": "expand",
                  },
                  "record": [Circular],
                  "validator": Validator {
                    "control": undefined,
                    "field": [Circular],
                    "innerValidationResults": Array [],
                  },
                },
                "id": Field {
                  "dataSet": [Circular],
                  "isDynamicPropsComputing": false,
                  "lastDynamicProps": Object {},
                  "pending": PromiseQueue {
                    "queue": Array [],
                    "queueing": false,
                  },
                  "pristineProps": Object {
                    "name": "id",
                  },
                  "props": Object {
                    "name": "id",
                  },
                  "record": [Circular],
                  "validator": Validator {
                    "control": undefined,
                    "field": [Circular],
                    "innerValidationResults": Array [],
                  },
                },
                "parentId": Field {
                  "dataSet": [Circular],
                  "isDynamicPropsComputing": false,
                  "lastDynamicProps": Object {},
                  "pending": PromiseQueue {
                    "queue": Array [],
                    "queueing": false,
                  },
                  "pristineProps": Object {
                    "name": "parentId",
                  },
                  "props": Object {
                    "name": "parentId",
                  },
                  "record": [Circular],
                  "validator": Validator {
                    "control": undefined,
                    "field": [Circular],
                    "innerValidationResults": Array [],
                  },
                },
              },
              "id": 1007,
              "isCached": false,
              "isCurrent": false,
              "isSelected": false,
              "pristineData": Object {
                "expand": false,
                "functionCode": "HR_UNIT",
                "icon": "fa fa-cube",
                "id": 73,
                "ischecked": true,
                "parentId": 2,
                "score": 10,
                "shortcutId": null,
                "symbol": "0",
                "text": "组织管理",
                "url": "hr/org_unit.html",
              },
              "selectable": true,
              "state": Object {},
              "status": "sync",
            },
            Record {
              "cascadeRecordsMap": Object {},
              "data": Object {
                "expand": false,
                "functionCode": "COMPANY_REACT",
                "icon": "mail_set",
                "id": 12,
                "ischecked": true,
                "parentId": 2,
                "score": 10,
                "shortcutId": null,
                "symbol": "1",
                "text": "公司管理(react)",
                "url": "hap-core/hr/company",
              },
              "dataSet": [Circular],
              "dataSetSnapshot": Object {},
              "editing": undefined,
              "fields": Object {
                "expand": Field {
                  "dataSet": [Circular],
                  "isDynamicPropsComputing": false,
                  "lastDynamicProps": Object {},
                  "pending": PromiseQueue {
                    "queue": Array [],
                    "queueing": false,
                  },
                  "pristineProps": Object {
                    "name": "expand",
                  },
                  "props": Object {
                    "name": "expand",
                  },
                  "record": [Circular],
                  "validator": Validator {
                    "control": undefined,
                    "field": [Circular],
                    "innerValidationResults": Array [],
                  },
                },
                "id": Field {
                  "dataSet": [Circular],
                  "isDynamicPropsComputing": false,
                  "lastDynamicProps": Object {},
                  "pending": PromiseQueue {
                    "queue": Array [],
                    "queueing": false,
                  },
                  "pristineProps": Object {
                    "name": "id",
                  },
                  "props": Object {
                    "name": "id",
                  },
                  "record": [Circular],
                  "validator": Validator {
                    "control": undefined,
                    "field": [Circular],
                    "innerValidationResults": Array [],
                  },
                },
                "parentId": Field {
                  "dataSet": [Circular],
                  "isDynamicPropsComputing": false,
                  "lastDynamicProps": Object {},
                  "pending": PromiseQueue {
                    "queue": Array [],
                    "queueing": false,
                  },
                  "pristineProps": Object {
                    "name": "parentId",
                  },
                  "props": Object {
                    "name": "parentId",
                  },
                  "record": [Circular],
                  "validator": Validator {
                    "control": undefined,
                    "field": [Circular],
                    "innerValidationResults": Array [],
                  },
                },
              },
              "id": 1008,
              "isCached": false,
              "isCurrent": false,
              "isSelected": false,
              "pristineData": Object {
                "expand": false,
                "functionCode": "COMPANY_REACT",
                "icon": "mail_set",
                "id": 12,
                "ischecked": true,
                "parentId": 2,
                "score": 10,
                "shortcutId": null,
                "symbol": "1",
                "text": "公司管理(react)",
                "url": "hap-core/hr/company",
              },
              "selectable": true,
              "state": Object {},
              "status": "sync",
            },
          ],
          "pageSize": 10,
          "parent": undefined,
          "parentName": undefined,
          "pending": PromiseQueue {
            "queue": Array [],
            "queueing": false,
          },
          "props": Object {
            "autoCreate": false,
            "autoLocateAfterCreate": true,
            "autoLocateAfterRemove": true,
            "autoLocateFirst": true,
            "autoQuery": false,
            "autoQueryAfterSubmit": true,
            "data": Array [
              Object {
                "expand": false,
                "functionCode": "HR",
                "icon": "fa fa-cubes",
                "id": 2,
                "ischecked": null,
                "score": 10,
                "shortcutId": null,
                "symbol": "0",
                "text": "组织架构",
                "url": null,
              },
              Object {
                "expand": false,
                "functionCode": "EMPLOYEE_REACT",
                "icon": "record_test",
                "id": 7,
                "ischecked": true,
                "parentId": 2,
                "score": 10,
                "shortcutId": null,
                "symbol": "1",
                "text": "员工管理(react)",
                "url": "hap-core/hr/employee",
              },
              Object {
                "expand": false,
                "functionCode": "HR_UNIT",
                "icon": "fa fa-cube",
                "id": 73,
                "ischecked": true,
                "parentId": 2,
                "score": 10,
                "shortcutId": null,
                "symbol": "0",
                "text": "组织管理",
                "url": "hr/org_unit.html",
              },
              Object {
                "expand": false,
                "functionCode": "COMPANY_REACT",
                "icon": "mail_set",
                "id": 12,
                "ischecked": true,
                "parentId": 2,
                "score": 10,
                "shortcutId": null,
                "symbol": "1",
                "text": "公司管理(react)",
                "url": "hap-core/hr/company",
              },
            ],
            "dataToJSON": "dirty",
            "events": Object {
              "select": [Function],
              "unSelect": [Function],
            },
            "expandField": "expand",
            "fields": Array [
              Object {
                "name": "id",
                "type": "number",
              },
              Object {
                "name": "expand",
                "type": "boolean",
              },
              Object {
                "name": "parentId",
                "type": "number",
              },
            ],
            "idField": "id",
            "modifiedCheck": true,
            "pageSize": 10,
            "paging": true,
            "parentField": "parentId",
            "primaryKey": "id",
            "selection": "multiple",
          },
          "queryParameter": Object {},
          "records": Array [
            Record {
              "cascadeRecordsMap": Object {},
              "data": Object {
                "expand": false,
                "functionCode": "HR",
                "icon": "fa fa-cubes",
                "id": 2,
                "ischecked": null,
                "parentId": undefined,
                "score": 10,
                "shortcutId": null,
                "symbol": "0",
                "text": "组织架构",
                "url": null,
              },
              "dataSet": [Circular],
              "dataSetSnapshot": Object {},
              "editing": undefined,
              "fields": Object {
                "expand": Field {
                  "dataSet": [Circular],
                  "isDynamicPropsComputing": false,
                  "lastDynamicProps": Object {},
                  "pending": PromiseQueue {
                    "queue": Array [],
                    "queueing": false,
                  },
                  "pristineProps": Object {
                    "name": "expand",
                  },
                  "props": Object {
                    "name": "expand",
                  },
                  "record": [Circular],
                  "validator": Validator {
                    "control": undefined,
                    "field": [Circular],
                    "innerValidationResults": Array [],
                  },
                },
                "id": Field {
                  "dataSet": [Circular],
                  "isDynamicPropsComputing": false,
                  "lastDynamicProps": Object {},
                  "pending": PromiseQueue {
                    "queue": Array [],
                    "queueing": false,
                  },
                  "pristineProps": Object {
                    "name": "id",
                  },
                  "props": Object {
                    "name": "id",
                  },
                  "record": [Circular],
                  "validator": Validator {
                    "control": undefined,
                    "field": [Circular],
                    "innerValidationResults": Array [],
                  },
                },
                "parentId": Field {
                  "dataSet": [Circular],
                  "isDynamicPropsComputing": false,
                  "lastDynamicProps": Object {},
                  "pending": PromiseQueue {
                    "queue": Array [],
                    "queueing": false,
                  },
                  "pristineProps": Object {
                    "name": "parentId",
                  },
                  "props": Object {
                    "name": "parentId",
                  },
                  "record": [Circular],
                  "validator": Validator {
                    "control": undefined,
                    "field": [Circular],
                    "innerValidationResults": Array [],
                  },
                },
              },
              "id": 1005,
              "isCached": false,
              "isCurrent": true,
              "isSelected": true,
              "pristineData": Object {
                "expand": false,
                "functionCode": "HR",
                "icon": "fa fa-cubes",
                "id": 2,
                "ischecked": null,
                "parentId": undefined,
                "score": 10,
                "shortcutId": null,
                "symbol": "0",
                "text": "组织架构",
                "url": null,
              },
              "selectable": true,
              "state": Object {},
              "status": "sync",
            },
            Record {
              "cascadeRecordsMap": Object {},
              "data": Object {
                "expand": false,
                "functionCode": "EMPLOYEE_REACT",
                "icon": "record_test",
                "id": 7,
                "ischecked": true,
                "parentId": 2,
                "score": 10,
                "shortcutId": null,
                "symbol": "1",
                "text": "员工管理(react)",
                "url": "hap-core/hr/employee",
              },
              "dataSet": [Circular],
              "dataSetSnapshot": Object {},
              "editing": undefined,
              "fields": Object {
                "expand": Field {
                  "dataSet": [Circular],
                  "isDynamicPropsComputing": false,
                  "lastDynamicProps": Object {},
                  "pending": PromiseQueue {
                    "queue": Array [],
                    "queueing": false,
                  },
                  "pristineProps": Object {
                    "name": "expand",
                  },
                  "props": Object {
                    "name": "expand",
                  },
                  "record": [Circular],
                  "validator": Validator {
                    "control": undefined,
                    "field": [Circular],
                    "innerValidationResults": Array [],
                  },
                },
                "id": Field {
                  "dataSet": [Circular],
                  "isDynamicPropsComputing": false,
                  "lastDynamicProps": Object {},
                  "pending": PromiseQueue {
                    "queue": Array [],
                    "queueing": false,
                  },
                  "pristineProps": Object {
                    "name": "id",
                  },
                  "props": Object {
                    "name": "id",
                  },
                  "record": [Circular],
                  "validator": Validator {
                    "control": undefined,
                    "field": [Circular],
                    "innerValidationResults": Array [],
                  },
                },
                "parentId": Field {
                  "dataSet": [Circular],
                  "isDynamicPropsComputing": false,
                  "lastDynamicProps": Object {},
                  "pending": PromiseQueue {
                    "queue": Array [],
                    "queueing": false,
                  },
                  "pristineProps": Object {
                    "name": "parentId",
                  },
                  "props": Object {
                    "name": "parentId",
                  },
                  "record": [Circular],
                  "validator": Validator {
                    "control": undefined,
                    "field": [Circular],
                    "innerValidationResults": Array [],
                  },
                },
              },
              "id": 1006,
              "isCached": false,
              "isCurrent": false,
              "isSelected": false,
              "pristineData": Object {
                "expand": false,
                "functionCode": "EMPLOYEE_REACT",
                "icon": "record_test",
                "id": 7,
                "ischecked": true,
                "parentId": 2,
                "score": 10,
                "shortcutId": null,
                "symbol": "1",
                "text": "员工管理(react)",
                "url": "hap-core/hr/employee",
              },
              "selectable": true,
              "state": Object {},
              "status": "sync",
            },
            Record {
              "cascadeRecordsMap": Object {},
              "data": Object {
                "expand": false,
                "functionCode": "HR_UNIT",
                "icon": "fa fa-cube",
                "id": 73,
                "ischecked": true,
                "parentId": 2,
                "score": 10,
                "shortcutId": null,
                "symbol": "0",
                "text": "组织管理",
                "url": "hr/org_unit.html",
              },
              "dataSet": [Circular],
              "dataSetSnapshot": Object {},
              "editing": undefined,
              "fields": Object {
                "expand": Field {
                  "dataSet": [Circular],
                  "isDynamicPropsComputing": false,
                  "lastDynamicProps": Object {},
                  "pending": PromiseQueue {
                    "queue": Array [],
                    "queueing": false,
                  },
                  "pristineProps": Object {
                    "name": "expand",
                  },
                  "props": Object {
                    "name": "expand",
                  },
                  "record": [Circular],
                  "validator": Validator {
                    "control": undefined,
                    "field": [Circular],
                    "innerValidationResults": Array [],
                  },
                },
                "id": Field {
                  "dataSet": [Circular],
                  "isDynamicPropsComputing": false,
                  "lastDynamicProps": Object {},
                  "pending": PromiseQueue {
                    "queue": Array [],
                    "queueing": false,
                  },
                  "pristineProps": Object {
                    "name": "id",
                  },
                  "props": Object {
                    "name": "id",
                  },
                  "record": [Circular],
                  "validator": Validator {
                    "control": undefined,
                    "field": [Circular],
                    "innerValidationResults": Array [],
                  },
                },
                "parentId": Field {
                  "dataSet": [Circular],
                  "isDynamicPropsComputing": false,
                  "lastDynamicProps": Object {},
                  "pending": PromiseQueue {
                    "queue": Array [],
                    "queueing": false,
                  },
                  "pristineProps": Object {
                    "name": "parentId",
                  },
                  "props": Object {
                    "name": "parentId",
                  },
                  "record": [Circular],
                  "validator": Validator {
                    "control": undefined,
                    "field": [Circular],
                    "innerValidationResults": Array [],
                  },
                },
              },
              "id": 1007,
              "isCached": false,
              "isCurrent": false,
              "isSelected": false,
              "pristineData": Object {
                "expand": false,
                "functionCode": "HR_UNIT",
                "icon": "fa fa-cube",
                "id": 73,
                "ischecked": true,
                "parentId": 2,
                "score": 10,
                "shortcutId": null,
                "symbol": "0",
                "text": "组织管理",
                "url": "hr/org_unit.html",
              },
              "selectable": true,
              "state": Object {},
              "status": "sync",
            },
            Record {
              "cascadeRecordsMap": Object {},
              "data": Object {
                "expand": false,
                "functionCode": "COMPANY_REACT",
                "icon": "mail_set",
                "id": 12,
                "ischecked": true,
                "parentId": 2,
                "score": 10,
                "shortcutId": null,
                "symbol": "1",
                "text": "公司管理(react)",
                "url": "hap-core/hr/company",
              },
              "dataSet": [Circular],
              "dataSetSnapshot": Object {},
              "editing": undefined,
              "fields": Object {
                "expand": Field {
                  "dataSet": [Circular],
                  "isDynamicPropsComputing": false,
                  "lastDynamicProps": Object {},
                  "pending": PromiseQueue {
                    "queue": Array [],
                    "queueing": false,
                  },
                  "pristineProps": Object {
                    "name": "expand",
                  },
                  "props": Object {
                    "name": "expand",
                  },
                  "record": [Circular],
                  "validator": Validator {
                    "control": undefined,
                    "field": [Circular],
                    "innerValidationResults": Array [],
                  },
                },
                "id": Field {
                  "dataSet": [Circular],
                  "isDynamicPropsComputing": false,
                  "lastDynamicProps": Object {},
                  "pending": PromiseQueue {
                    "queue": Array [],
                    "queueing": false,
                  },
                  "pristineProps": Object {
                    "name": "id",
                  },
                  "props": Object {
                    "name": "id",
                  },
                  "record": [Circular],
                  "validator": Validator {
                    "control": undefined,
                    "field": [Circular],
                    "innerValidationResults": Array [],
                  },
                },
                "parentId": Field {
                  "dataSet": [Circular],
                  "isDynamicPropsComputing": false,
                  "lastDynamicProps": Object {},
                  "pending": PromiseQueue {
                    "queue": Array [],
                    "queueing": false,
                  },
                  "pristineProps": Object {
                    "name": "parentId",
                  },
                  "props": Object {
                    "name": "parentId",
                  },
                  "record": [Circular],
                  "validator": Validator {
                    "control": undefined,
                    "field": [Circular],
                    "innerValidationResults": Array [],
                  },
                },
              },
              "id": 1008,
              "isCached": false,
              "isCurrent": false,
              "isSelected": false,
              "pristineData": Object {
                "expand": false,
                "functionCode": "COMPANY_REACT",
                "icon": "mail_set",
                "id": 12,
                "ischecked": true,
                "parentId": 2,
                "score": 10,
                "shortcutId": null,
                "symbol": "1",
                "text": "公司管理(react)",
                "url": "hap-core/hr/company",
              },
              "selectable": true,
              "state": Object {},
              "status": "sync",
            },
          ],
          "resetInBatch": false,
          "selection": "multiple",
          "status": "ready",
          "syncChildrenRemote": [Function],
          "totalCount": 4,
        }
      }
    >
      <Spin
        size="default"
        spinning={false}
        wrapperClassName=""
      >
        <Animate
          animation={Object {}}
          className="c7n-spin-nested-loading"
          component="div"
          componentProps={Object {}}
          transitionAppear={false}
          transitionEnter={true}
          transitionLeave={true}
          transitionName="fade"
        >
          <div
            className="c7n-spin-nested-loading"
          >
            <AnimateChild
              animation={Object {}}
              key="container"
              transitionAppear={false}
              transitionEnter={true}
              transitionLeave={true}
              transitionName="fade"
            >
              <div
                className="c7n-spin-container"
                key="container"
                style={Object {}}
              >
                <Tree
                  checkable={true}
                  checkedKeys={Array []}
                  expandedKeys={Array []}
                  multiple={true}
                  onCheck={[Function]}
                  onExpand={[Function]}
                  onSelect={[Function]}
                  openAnimation={
                    Object {
                      "appear": [Function],
                      "enter": [Function],
                      "leave": [Function],
                    }
                  }
                  selectedKeys={
                    Array [
                      "2",
                    ]
                  }
                  showIcon={false}
                >
                  <Tree
                    autoExpandParent={false}
                    checkStrictly={false}
                    checkable={
                      <span
                        className="c7n-tree-checkbox-inner"
                      />
                    }
                    checkedKeys={Array []}
                    className="c7n-tree-icon-hide"
                    defaultCheckedKeys={Array []}
                    defaultExpandAll={false}
                    defaultExpandParent={true}
                    defaultExpandedKeys={Array []}
                    defaultSelectedKeys={Array []}
                    disabled={false}
                    draggable={false}
                    expandedKeys={Array []}
                    multiple={true}
                    onCheck={[Function]}
                    onDragEnd={null}
                    onDragEnter={null}
                    onDragLeave={null}
                    onDragOver={null}
                    onDragStart={null}
                    onDrop={null}
                    onExpand={[Function]}
                    onMouseEnter={null}
                    onMouseLeave={null}
                    onSelect={[Function]}
                    openAnimation={
                      Object {
                        "appear": [Function],
                        "enter": [Function],
                        "leave": [Function],
                      }
                    }
                    prefixCls="c7n-tree"
                    selectable={true}
                    selectedKeys={
                      Array [
                        "2",
                      ]
                    }
                    showIcon={false}
                    showLine={false}
                    switcherIcon={[Function]}
                  >
                    <ul
                      className="c7n-tree c7n-tree-icon-hide"
                      role="tree-node"
                      unselectable="on"
                    >
                      <TreeNode
                        checked={false}
                        dragOver={false}
                        dragOverGapBottom={false}
                        dragOverGapTop={false}
                        eventKey="2"
                        expanded={false}
                        halfChecked={false}
                        hasChildren={true}
                        key=".$2"
                        pos="0-0"
                        selectable={true}
                        selected={true}
                        title="组织架构"
                      >
                        <li
                          className=""
                          onDragEnd={[Function]}
                          onDragEnter={[Function]}
                          onDragLeave={[Function]}
                          onDragOver={[Function]}
                          onDrop={[Function]}
                        >
                          <span
                            className="c7n-tree-switcher c7n-tree-switcher_close"
                            onClick={[Function]}
                          >
                            <Icon
                              className="c7n-tree-switcher-icon"
                              type="arrow_drop_down"
                            >
                              <i
                                className="icon icon-arrow_drop_down c7n-tree-switcher-icon"
                              />
                            </Icon>
                          </span>
                          <span
                            className="c7n-tree-checkbox"
                            onClick={[Function]}
                          >
                            <span
                              className="c7n-tree-checkbox-inner"
                            />
                          </span>
                          <span
                            className="c7n-tree-node-content-wrapper c7n-tree-node-content-wrapper-close c7n-tree-node-selected"
                            onClick={[Function]}
                            onContextMenu={[Function]}
                            onDragStart={[Function]}
                            onMouseEnter={[Function]}
                            onMouseLeave={[Function]}
                            title="组织架构"
                          >
                            <span
                              className="c7n-tree-title"
                            >
                              组织架构
                            </span>
                          </span>
                        </li>
                      </TreeNode>
                    </ul>
                  </Tree>
                </Tree>
              </div>
            </AnimateChild>
          </div>
        </Animate>
      </Spin>
    </Spin>
  </Tree<PRO>>
</TreeTest>
`;
